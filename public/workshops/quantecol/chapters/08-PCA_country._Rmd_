---
date: "2021-01-01"
draft: false
excerpt: What you need to know upfront.
subtitle: ""
title: "8b. PCA of Countries' Socio-economic Status"
weight: 10
---

<!--- # Topic 8: PCA of countries' socio-economic status --->

## Set-up the analysis environment

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(vegan)
library(GGally)
library(cluster)
library(purrr)
library(dendextend)
library(ggcorrplot)
library(DataExplorer)
library(factoextra)
library(gridExtra)
```

## Country data

These data were taken from a [Kaggle challenge](https://www.kaggle.com/rohan0301/unsupervised-learning-on-country-data). Information about the data and the analysis is repeated here almost verbatim, but I have included various edits and modifications to the analysis.

### Clustering the Countries by using Unsupervised Learning for HELP International

#### Objective

To categorise the countries using socio-economic and health factors that determine the overall development of the country.

#### About organization

HELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities.

#### Problem Statement

HELP International have been able to raise around \$ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. So, CEO has to make decision to choose the countries that are in the direst need of aid. Hence, your Job as a Data scientist is to categorise the countries using some socio-economic and health factors that determine the overall development of the country. Then you need to suggest the countries which the CEO needs to focus on the most.

### Load the data and examine it

```{r}
fp <- "/Users/ajsmit/Dropbox/R/workshops/Quantitative_Ecology/docs/"
data <- read_csv(paste0(fp, "data/Country-data.csv"))
head(data)
summary(data)
```

We can see that there are no missing values. Here's another way to look for missing values:

```{r}
plot_missing(
    data, 
    title = "Missing Values"
)
```

The meaning of the column names are provided in a separate file:

```{r}
read_csv(paste0("data/data-dictionary.csv"))
```

The Kaggle solution provides a pairwise correlation amongst variables, and I think this is a good idea.

## A pairwise correlation

```{r}
# computing a correalation matrix
corr <- round(cor(data[2:10]), 1)

# visualization of the correlation matrix
ggcorrplot(corr, type = 'upper', outline.col = "white",
          colors = c("#1679a1", "white", "#f8766d"),
          lab = TRUE)
```

## Do the PCA

At this point my analysis starts to deviate from the one set of solutions provided on Kaggle.

Because the data are in different units we standardise it first:

```{r}
data_std <- decostand(data[, 2:10], method = "standardize")
```

Now we do the PCA using **vegan**'s `rda()`:

```{r}
data_pca <- rda(data_std)
# summary(data_pca) # a very long list printed out, so I extract shorter components, below...

# the eigenvalues
eigenvals(data_pca)

# species scores
scores(data_pca, choices = c(1, 2, 3), display = "sp")

# site scores
head(scores(data_pca, choices = c(1, 2, 3), display = "sites"))
```

The percent inertia explained by the first three axes is:

```{r}
round(sum(eigenvals(data_pca)[1:3]) / sum(eigenvals(data_pca)) * 100, 1)
```

## Ordination diagrams

```{r}
pl1 <- ordiplot(data_pca, type = "none", scaling = 1, main = "Country indicators - biplot scaling 1")
points(pl1, "sites", pch = 21, cex = 1.75, col = "grey80", bg = "grey80")
points(pl1, "species", pch = 21, col = "turquoise", arrows = TRUE)
text(pl1, "species", col = "blue4", cex = 0.9)
text(pl1, "sites", col = "red4", cex = 0.9)

pl2 <- ordiplot(data_pca, type = "none", scaling = 2, main = "Country indicators - biplot scaling 2")
points(pl2, "sites", pch = 21, cex = 1.75, col = "grey80", bg = "grey80")
points(pl2, "species", pch = 21, col = "turquoise", arrows = TRUE)
text(pl2, "species", col = "blue4", cex = 0.9)
text(pl2, "sites", col = "red4", cex = 0.9)
```
